apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Creates a EKS cluster with Spark Operator + extra enabled through Terraform
  name: create-data-on-eks-spark
  title: Create Data on EKS - Spark Operator
spec:
  owner: guest
  type: service
  parameters:
    - properties:
        tfVars:
          properties:
            eks_cluster_version:
              default: "1.29"
              description: EKS Cluster version
              type: string
            enable_amazon_prometheus:
              default: true
              description: Enable AWS Managed Prometheus service
              type: boolean
            enable_vpc_endpoints:
              default: false
              description: Enable VPC Endpoints
              type: boolean
            enable_yunikorn:
              default: true
              description: Enable Apache YuniKorn Scheduler
              type: boolean
            name:
              default: spark-operator-doeks
              description: Name of the VPC and EKS Cluster
              type: string
            private_subnets:
              default:
                - 10.1.1.0/24
                - 10.1.2.0/24
              description: Private Subnets CIDRs. 254 IPs per Subnet/AZ for Private NAT + NLB + Airflow + EC2 Jumphost etc.
              items:
                type: string
              type: array
            public_subnets:
              default:
                - 10.1.0.0/26
                - 10.1.0.64/26
              description: Public Subnets CIDRs. 62 IPs per Subnet/AZ
              items:
                type: string
              type: array
            region:
              default: us-west-2
              description: Region
              type: string
            secondary_cidr_blocks:
              default:
                - 100.64.0.0/16
              description: Secondary CIDR blocks to be attached to VPC
              items:
                type: string
              type: array
            vpc_cidr:
              default: 10.1.0.0/16
              description: VPC CIDR. This should be a valid private (RFC 1918) CIDR range
              type: string
            eks_data_plane_subnet_secondary_cidr:
              default:
                - 100.64.0.0/17
                - 100.64.128.0/17
              description: Secondary CIDR blocks. 32766 IPs per Subnet per Subnet/AZ for EKS Node and Pods
              items:
                type: string
              type: array
          title: Terraform variables
          type: object
        name:
          title: name of this entry
          type: string
        namespace:
          title: namespace within the kubernetes cluster to deploy this
          type: string
          default: flux-system
        adminRoleName:
          title: Admin Role Name
          description: Name of the role to give the administrative rights on the EKS cluster.
          default: Admin
          type: string
      title: Configuration Options
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./templates-spark/
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          tfVars: ${{ parameters.tfVars }}
          adminRoleName: ${{parameters.adminRoleName}}
          clusterName: ${{ parameters.clusterName }}
    - id: publish
      name: Publishing to a gitea git repository
      action: publish:gitea
      input:
        description: Example Data on EKS demo
        # Hard coded value for this demo purposes only.
        repoUrl: cnoe.localtest.me:8443/gitea?repo=${{parameters.name}}
        defaultBranch: main
    - id: create-argocd-app
      name: Create ArgoCD App
      action: cnoe:create-argocd-app
      input:
        appName: ${{parameters.name}}
        appNamespace: ${{parameters.namespace}}
        argoInstance: in-cluster
        projectName: default
        # necessary until we generate our own cert
        repoUrl: http://my-gitea-http.gitea.svc.cluster.local:3000/giteaAdmin/${{parameters.name}}
        path: "manifests"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: 'catalog-info.yaml'
  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}